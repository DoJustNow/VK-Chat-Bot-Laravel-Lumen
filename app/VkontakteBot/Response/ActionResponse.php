<?php
namespace App\VkontakteBot\Response;

use App\VkontakteBot\BotKeyboard\ButtonFactory;
use App\VkontakteBot\BotKeyboard\ButtonRowFactory;
use App\VkontakteBot\BotKeyboard\KeyboardFactory;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Cache;
use VK\Client\VKApiClient;

class ActionResponse
{

    private $vkApiClient;
    private $request;
    private $accessToken;

    public function __construct(
        Request $request,
        VKApiClient $vkApiClient,
        String $accessToken
    ) {
        $this->request     = $request;
        $this->vkApiClient = $vkApiClient;
        $this->accessToken = $accessToken;
    }

    public function start()
    {
        $buttonFaq       = ButtonFactory::create('faq', 'FAQ', 'primary');
        $buttonAbout     = ButtonFactory::create('about', "–û –Ω–∞—Å", 'primary');
        $buttonMoneyBack = ButtonFactory::create('reviews', "–û—Ç–∑—ã–≤—ã",
            'primary');
        $buttonStock     = ButtonFactory::create('stock', "–ê–∫—Ü–∏–∏", 'positive');

        $buttonRow1 = ButtonRowFactory::createRow()
                                      ->addButton($buttonFaq)
                                      ->addButton($buttonAbout)
                                      ->getRow();

        $buttonRow2 = ButtonRowFactory::createRow()
                                      ->addButton($buttonMoneyBack)
                                      ->getRow();

        $buttonRow3 = ButtonRowFactory::createRow()
                                      ->addButton($buttonStock)
                                      ->getRow();

        $kb = KeyboardFactory::createKeyboard()
                             ->addRow($buttonRow1)
                             ->addRow($buttonRow2)
                             ->addRow($buttonRow3)
                             ->setOneTime(false)
                             ->getKeyboard();

        $params = [
            'user_id'   => $this->request->object['from_id'],
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => "ü§ñ ü§ñ ü§ñ\n –í—ã–±–∏—Ä–∞–π",
            'keyboard'  => json_encode($kb, JSON_UNESCAPED_UNICODE),
        ];

        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function faqClick()
    {
        $userId = $this->request->object['from_id'];
        Cache::put("dialog_step_$userId", 'faq', 5);
        $b1 = ButtonFactory::create('faq_buy', '–ü–æ–∫—É–ø–∫–∞', 'primary');
        $b2 = ButtonFactory::create('faq_payment', '–û–ø–ª–∞—Ç–∞', 'primary');
        $b3 = ButtonFactory::create('faq_delivery', '–î–æ—Å—Ç–∞–≤–∫–∞', 'primary');
        $b4 = ButtonFactory::create('faq_money_back', '–í–æ–∑–≤—Ä–∞—Ç', 'primary');
        $b5 = ButtonFactory::create('start', '<< –ù–∞–∑–∞–¥', 'negative');

        $btnRow1 = ButtonRowFactory::createRow()
                                   ->addButton($b1)
                                   ->addButton($b2)
                                   ->addButton($b3)
                                   ->addButton($b4)
                                   ->getRow();

        $btnRow2 = ButtonRowFactory::createRow()
                                   ->addButton($b5)
                                   ->getRow();

        $kb = KeyboardFactory::createKeyboard()->addRow($btnRow1)
                             ->addRow($btnRow2)
                             ->setOneTime(true)
                             ->getKeyboard();

        $params = [
            'user_id'   => $userId,//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => "ü§ñ ü§ñ ü§ñ\n FAQ",
            'keyboard'  => json_encode($kb, JSON_UNESCAPED_UNICODE),
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function faqBuyClick()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'    => '–ü—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä –≤—ã –º–æ–∂–µ—Ç–µ —Ç–∞–º-—Ç–æ. –ò —Ç–∞–∫-—Ç–æ.',
            'attachment' => 'photo-175591301_456239018',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function faqPaymentClick()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'    => '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ —Ç–∞–∫–∏—Ö-—Ç–æ —É—Å–ª–æ–≤–∏—è—Ö –∏ —Ç–∞–∫–∏–º–∏-—Ç–æ —Å–ø–æ—Å–æ–±–∞–º–∏',
            'attachment' => 'photo-175591301_456239019',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function faqDeliveryClick()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'    => '–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ',
            'attachment' => 'photo-175591301_456239020',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function faqMoneyBackClick()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'    => '–í–æ–≤–∑—Ä–∞—Ç –ø–æ –∑–∞–∫–æ–Ω—É',
            'attachment' => 'photo-175591301_456239021',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function aboutClick()
    {
        $userId = $this->request->object['from_id'];
        Cache::put("dialog_step_$userId", 'about', 5);
        $b1 = ButtonFactory::create('about_shop', '–û –º–∞–≥–∞–∑–∞–∏–Ω–µ', 'primary');
        $b2 = ButtonFactory::create('about_workers', '–û —Ä–∞–±–æ—Ç–Ω–∏–∫–∞—Ö', 'primary');
        $b3 = ButtonFactory::create('start', '<< –ù–∞–∑–∞–¥', 'negative');

        $btnRow1 = ButtonRowFactory::createRow()->addButton($b1)
                                   ->addButton($b2)
                                   ->getRow();

        $btnRow2 = ButtonRowFactory::createRow()->addButton($b3)
                                   ->getRow();

        $kb = KeyboardFactory::createKeyboard()->addRow($btnRow1)
                             ->addRow($btnRow2)
                             ->setOneTime(true)
                             ->getKeyboard();

        $params = [
            'user_id'   => $userId,//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => "ü§ñ ü§ñ ü§ñ\n–°–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å. –ü—Ä–æ–¥–æ–ª–∂–∞–π!",
            'keyboard'  => json_encode($kb, JSON_UNESCAPED_UNICODE),
        ];

        $this->vkApiClient->messages()->send($this->accessToken, $params);

    }

    public function aboutShopClick()
    {
        $params = [
            'user_id'   => $this->request->object['from_id'],//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => '–ú–∞–≥–∞–∑–∏–Ω —Ä–∞—Å—Å–ø–æ–ª–æ–∂–µ–Ω –≤ —Ü–µ–Ω—Ç—Ä–µ –º–∏—Ä–∞.',
            'lat'       => 60,
            'long'      => 90,
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function aboutWorkersClick()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'    => '–ö–æ–ª–ª–µ–∫—Ç–∏–≤ —É—Å–ø–µ—à–Ω—ã—Ö, –º–æ–ª–æ–¥—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.',
            'attachment' => 'photo-175591301_456239022',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function reviewsClick()
    {
        $userId = $this->request->object['from_id'];
        Cache::put("dialog_step_$userId", 'reviews', 5);
        $params = [
            'user_id'   => $userId,//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => "–û—Ç–∑—ã–≤—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –≥—Ä—É–ø–ø–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://vk.com/dialogue_bot",
        ];

        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function stockClick()
    {
        $userId = $this->request->object['from_id'];
        Cache::put("dialog_step_$userId", 'stock', 5);
        $b1 = ButtonFactory::create('stock_1', '–ê–∫—Ü–∏—è 1', 'primary');
        $b2 = ButtonFactory::create('stock_2', '–ê–∫—Ü–∏—è 2', 'primary');
        $b3 = ButtonFactory::create('stock_3', '–ê–∫—Ü–∏—è 3', 'primary');
        $b4 = ButtonFactory::create('stock_4', '–ë–æ–Ω—É—Å –∫–æ–¥', 'primary');
        $b5 = ButtonFactory::create('start', '<< –ù–∞–∑–∞–¥', 'negative');

        $btnRow1 = ButtonRowFactory::createRow()->addButton($b1)
                                   ->addButton($b2)
                                   ->getRow();

        $btnRow2 = ButtonRowFactory::createRow()->addButton($b3)
                                   ->addButton($b4)
                                   ->getRow();

        $btnRow3 = ButtonRowFactory::createRow()
                                   ->addButton($b5)
                                   ->getRow();

        $kb = KeyboardFactory::createKeyboard()->addRow($btnRow1)
                             ->addRow($btnRow2)
                             ->addRow($btnRow3)
                             ->setOneTime(true)
                             ->getKeyboard();

        $params = [
            'user_id'   => $userId,//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => "ü§ñ ü§ñ ü§ñ\n –ê–∫—Ü–∏–∏:\n
            1 - ...\n
            2 - ...\n
            3 - ...\n
            4 - ...",
            'keyboard'  => json_encode($kb, JSON_UNESCAPED_UNICODE),
        ];

        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function stock1Click()
    {
        $params = [
            'user_id'   => $this->request->object['from_id'],//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => '–ê–∫—Ü–∏—è 1...',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function stock2Click()
    {
        $params = [
            'user_id'   => $this->request->object['from_id'],//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => '–ê–∫—Ü–∏—è 2...',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function stock3Click()
    {
        $params = [
            'user_id'   => $this->request->object['from_id'],//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => '–ê–∫—Ü–∏—è 3...',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function stock4Click()
    {
        $userId = $this->request->object['from_id'];
        Cache::put("dialog_step_$userId", 'stock_4_bonus_code_entry', 5);
        $params = [
            'user_id'   => $userId,//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –±–æ–Ω—É—Å –∫–æ–¥ (–¥–ª—è —Ç–µ—Å—Ç–∞ bonus10,bonus30):',
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function checkBonusCode()
    {
        $bonusCodes = [
            'bonus10' => '–í–∞—à –±–æ–Ω—É—Å -10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ.',
            'bonus30' => '–í–∞—à –±–æ–Ω—É—Å -30% –Ω–∞ –ø–æ–∫—É–ø–∫—É —Å–≤—ã—à–µ 10 000 –ø–æ–ø—É–≥–∞–µ–≤.',
        ];

        $userBonusCode = strtolower($this->request->object['text']);

        if (array_key_exists($userBonusCode, $bonusCodes)) {
            $message = $bonusCodes[$userBonusCode];
        } else {
            $message
                = "–¢–∞–∫–æ–≥–æ –±–æ–Ω—É—Å-–∫–æ–¥–∞ –Ω–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ –∑–∞–Ω–æ–≤–æ:";
        }

        $params = [
            'user_id'   => $this->request->object['from_id'],//498921857
            'random_id' => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'message'   => $message,
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }

    public function defaultResponse()
    {
        $params = [
            'user_id'    => $this->request->object['from_id'],//498921857
            'random_id'  => rand(0, 2 ** 31),
            //TODO –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            'attachment' => "photo-175591301_456239017",
        ];
        $this->vkApiClient->messages()->send($this->accessToken, $params);
    }
}